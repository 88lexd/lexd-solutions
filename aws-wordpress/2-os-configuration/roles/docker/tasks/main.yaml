# The installation method for Docker can be reference here:
# https://docs.docker.com/engine/install/ubuntu/

---
###########################
# Setup Docker repository
- name: Install prerequisite packages
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    update_cache: yes
    state: present

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
    keyring: "{{ docker_gpg_keyring_path }}"

- name: Get Ubuntu codename
  shell: lsb_release --codename --short
  register: ubuntu_codename
  changed_when: False  # Task will return ok instead of changed

- name: Get OS architecture
  shell: dpkg --print-architecture
  register: os_arch
  changed_when: False  # Task will return ok instead of changed

- name: Add Docker apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ os_arch.stdout }} signed-by={{ docker_gpg_keyring_path }}] https://download.docker.com/linux/ubuntu {{ ubuntu_codename.stdout }} stable"
    state: present
    filename: docker

- name: Install Docker packages
  ansible.builtin.apt:
    name:
      - "docker-ce={{ docker_version }}*"
      - "docker-ce-cli={{ docker_version }}*"
      - "containerd.io"
    update_cache: yes
    state: present
  register: docker_packages_installed

# Ref: https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker
- name: Copy Docker daemon config file
  template:
    src: docker_daemon.j2
    dest: /etc/docker/daemon.json

- name: Enable and restart glusterd.service
  ansible.builtin.service:
    name: docker.service
    enabled: yes
    state: started

- name: "Add current user [{{ ansible_env.SUDO_USER }}] into docker group"
  ansible.builtin.user:
    name: "{{ ansible_env.SUDO_USER }}"
    groups: docker
    append: yes


- name: Reboot to ensure Docker is fully installed and funtional
  ansible.builtin.reboot:
    test_command: docker ps
  when: docker_packages_installed.changed
