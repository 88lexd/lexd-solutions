# This PVC can dynamically create a PV thanks to the "nfs-subdir-external-provisioner" installed via the Ansible playbook (setup-nfs-server.yml)
# The "nfs-subdir-external-provisioner" by default is set to delete but will rename the folder with "archived-" as the prefex.
# e.g. /nfs/k8s/folder1 TO /nfs/k8s/archived-folder1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "mysql-pvc"
  labels:
    app: mysql
spec:
  # nfs-client class is created by the dynamic provisioner. Check name by running $ kubectl get sc
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi  # This can be any value as it is a required field. The PV will consume whatever the NFS export presents it.


---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql  # will be used by WORDPRESS_DB_HOST in 'deployment-wordpress.yaml'
  labels:
    app: wordpress
    tier: mysql
spec:
  type: ClusterIP  # This is the default but is a good practice to define it.
  clusterIP: None
  ports:
    - port: 3306
  selector:
    app: wordpress
    tier: mysql


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-wordpress
  labels:
    app: wordpress
    tier: mysql
spec:
  replicas: {{ .Values.mysql.deployment_replicas }}
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      containers:
      - image: {{ .Values.mysql.deployment_image }}
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mysql.k8s_secret_name }}
              key: password
        volumeMounts:
        - name: mysql-volume
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-volume
        persistentVolumeClaim:
          claimName: mysql-pvc
