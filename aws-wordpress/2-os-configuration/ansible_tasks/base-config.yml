---
- name:  Include vars for /etc/hosts
  ansible.builtin.include_vars:
    file: ../vars/etc_hosts.yml

- name: Update /etc/hosts for local cluster
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: "{{ etc_hosts_local }}"
  when: inventory_type == "local"

- name: Update /etc/hosts for AWS cluster
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: "{{ etc_hosts_aws }}"
  when: inventory_type == "aws"

- name: Set OS hostname based on inventory_hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

# /etc/resolv.conf is now managed by systemd
- name: Update /etc/systemd/resolved.conf to include lexd.local in search suffix
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: '^Domains'
    line: "Domains=lexd.local"
    state: present
  register: resolve_conf

- name: Restart systemd-resolved service
  ansible.builtin.service:
    name: systemd-resolved.service
    state: restarted
  when: resolve_conf.changed

- name: Set timezone to Australia/Sydney
  community.general.timezone:
    name: Australia/Sydney

- name: Configure .vimrc (no indent)
  ansible.builtin.lineinfile:
    path: .vimrc  # uses to $HOME/.vimrc
    regexp: "^set autoindent"
    line: "set noautoindent"
    state: present
    create: yes
  become_user: "{{ ansible_env.SUDO_USER }}"

- name: Configure .vimrc (set paste)
  ansible.builtin.lineinfile:
    path: .vimrc  # uses to $HOME/.vimrc
    regexp: "^set paste"
    line: "set paste"
    state: present
    create: yes
  become_user: "{{ ansible_env.SUDO_USER }}"

- name: Install base dependencies
  ansible.builtin.apt:
    name:
      - python3-pip  # require to install Kubernetes python modules which is used by Ansible
      - python3-jmespath  # for ansible's "| json_query" function
      - jq  # to extract info from kubectl or docker output
      - net-tools  # to troubleshoot network related issues
      - iotop
      - iftop
    state: present
    update_cache: yes

- name: Install kubernetes python library
  ansible.builtin.pip:
    name: kubernetes
  become_user: "{{ ansible_env.SUDO_USER }}"  # Install as non root user!
