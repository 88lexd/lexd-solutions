# Installation procedure for Kubernetes. Refer to:
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/

---
#####################
# Disable Swap
- name: Disable swap for current session
  command: swapoff -a

- name: Disable swap permanently, persist reboots
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: yes

- name: Install prerequisite packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
    update_cache: yes
    state: present

#######################
# Configure Iptables
# TODO

##############################
# Install Kubernetes packages
- name: Add Kubernetes GPG key
  ansible.builtin.apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
    keyring: "{{ k8s_gpg_keyring_path }}"

- name: Add Kubernetes APT repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by={{ k8s_gpg_keyring_path }}] {{ k8s_repository }}"
    state: present
    filename: kubernetes

# Without this, when I use 'with_items' to install kubeadm, it will also install kubelet and kubectl to a much later version!
- name: Set fact for Kubernetes packes (allow packages to install in one loop)
  set_fact:
    exact_pkg: "{{ item.name }}={{item.version}}"
  with_items: "{{ kubernetes_packages }}"
  register: exact_pkg_result

- name: Make a list from the previous fact
  set_fact:
    k8s_packages: "{{ exact_pkg_result.results | map(attribute='ansible_facts.exact_pkg') | list }}"

- name: Show previous fact as oneline for the next command
  debug:
    msg: "{{ k8s_packages | join(' ') }}"

# There is a bug with 'apt' module where it will install the latest kubelet and kubectl when kubeadm is installed.
# I need all 3 versions to be the same!
- name: Install Kubernetes packages
  shell: "apt-get update && apt-get install -y {{ k8s_packages | join(' ') }}"

- name: APT hold Kubernetes packages
  ansible.builtin.dpkg_selections:
    name: "{{ item.name }}"
    selection: hold
  with_items: "{{ kubernetes_packages }}"
