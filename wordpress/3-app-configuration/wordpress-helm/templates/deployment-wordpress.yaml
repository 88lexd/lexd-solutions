# This PVC can dynamically create a PV thanks to the "nfs-subdir-external-provisioner" installed via the Ansible playbook (setup-nfs-server.yml)
# The "nfs-subdir-external-provisioner" by default is set to delete but will rename the folder with "archived-" as the prefex.
# e.g. /nfs/k8s/folder1 TO /nfs/k8s/archived-folder1

########################################
# No longer using EFS due to limited IO
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: "wordpress-pvc"
#   labels:
#     app: wordpress
# spec:
#   # nfs-client class is created by the dynamic provisioner. Check name by running $ kubectl get sc
#   storageClassName: nfs-client
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 1Mi  # This can be any value as it is a required field. The PV will consume whatever the NFS export presents it.

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-local-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Mi  # this is ignored

---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-service
  labels:
    app: wordpress
spec:
  type: ClusterIP  # This is the default but is a good practice to define it.
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: wordpress
    tier: frontend


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  replicas: {{ .Values.wordpress.deployment_replicas }}
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
      - image: {{ .Values.wordpress.deployment_image }}
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql  # Uses k8s DNS and is referencing the [service]metadata.name in 'deployment-mysql.yaml'
        - name: WORDPRESS_DB_USER
          value: root
        - name: TZ
          value: {{ .Values.time_zone }}
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mysql.k8s_secret_name }}
              key: password
        volumeMounts:
        - name: wordpress-volume
          mountPath: "/var/www/html"  # which data will be stored
        {{- if .Values.wordpress.container_resources }}
        resources:
          {{ .Values.wordpress.container_resources | toJson }}
        {{- end }}
      volumes:
      - name: wordpress-volume
        persistentVolumeClaim:
          claimName: wordpress-local-pvc  # Referencing [PersistentVolumeClaim].metadata.name in this deployment manifest
