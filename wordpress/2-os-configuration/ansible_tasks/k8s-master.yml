---
- name: Check if kube-apiserver process is already running
  shell: |
    if [[ $(ps -A | grep kube-apiserver) ]]; then
        ps -Af | grep kube-apiserver | grep -v grep
    else
        echo "KUBE_APISERVER_NOT_RUNNING"
    fi
  args:
    executable: /bin/bash
  register: kube_apiserver_status
  changed_when: False  # Task will return ok instead of changed

- name: Show current kube-apiserver process status
  debug:
    var: kube_apiserver_status.stdout

- name: Using the following options for kubadm init
  debug:
    msg: "{{ kube_init_options | join(' ') }}"
  when: kube_apiserver_status.stdout == "KUBE_APISERVER_NOT_RUNNING"

- name: Create Kubernetes Cluster using kubeadm init
  shell: "kubeadm init {{ kube_init_options | join(' ') }}"
  args:
    executable: /bin/bash
  when: kube_apiserver_status.stdout == "KUBE_APISERVER_NOT_RUNNING"

- name: Create kubeconfig directory for current user
  ansible.builtin.file:
    path: ".kube/"
    state: directory
  become_user: "{{ ansible_env.SUDO_USER }}"

- name: Copy /etc/kubernetes/admin.conf to current user profile
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: ".kube/config"
    remote_src: yes
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"
    mode: 0600

############################################
# Begin Container Network Interface (CNI)
# Maybe is always OK to apply this YAML? can decide later...
- name: Check if there is Flannel is already deployed
  shell: kubectl get daemonsets.apps -n kube-flannel -o json | jq -r '.items[].metadata.name' | grep 'kube-flannel' || echo "NOT_FOUND"
  register: flannel_status
  become_user: "{{ ansible_env.SUDO_USER }}"
  changed_when: False  # Task will return ok instead of changed

- name: Copy kube-flannel.yml to server
  ansible.builtin.template:
    src: ./files/kube-flannel.yml.j2
    dest: /tmp/kube-flannel.yml
  become_user: "{{ ansible_env.SUDO_USER }}"
  register: kube_flannel_yml
  when: flannel_status.stdout == "NOT_FOUND"

- name: Install flannel CNI (Container Network Interface)
  shell: kubectl apply -f /tmp/kube-flannel.yml
  become_user: "{{ ansible_env.SUDO_USER }}" # Must run as standard user as it as access to kubectl
  when: flannel_status.stdout == "NOT_FOUND"

- name: Remove kube-flannel.yml file
  ansible.builtin.file:
    path: /tmp/kube-flannel.yml
    state: absent
  when: kube_flannel_yml.changed
# End Container Network Interface (CNI)


# Weave doesn't seem like it exist anymore... the way the repo contains broken links etc..
# - name: Check if there is weavenet is already deployed
#   shell: kubectl get daemonsets.apps -n kube-system -o json | jq -r '.items[].metadata.name' | grep 'weave-net' || echo "NOT_FOUND"
#   register: weave_net_status
#   become_user: "{{ ansible_env.SUDO_USER }}"
#   changed_when: False  # Task will return ok instead of changed

# - name: Install Weave CNI
#   shell: |
#     kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')&env.IPALLOC_RANGE={{ weave_cni_cidr }}"
#   args:
#     executable: /bin/bash
#   become_user: "{{ ansible_env.SUDO_USER }}"
#   when: weave_net_status.stdout == "NOT_FOUND"
