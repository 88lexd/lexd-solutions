apiVersion: batch/v1
kind: CronJob
metadata:
  name: lets-encrypt-cron
spec:
  schedule: "0 23 */7 * *"  # Every 7 days at 11PM
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccountName: {{ .Values.lets_encrypt.service_account_name }}
          automountServiceAccountToken: true
          containers:
          - image: 88lexd/lets-encrypt-cron:latest
            imagePullPolicy: Always
            name: lets-encrypt-cron
            command: ["python3"]
            args: ["/app/main.py", "--cluster-config"]
            env:
            - name: TZ
              value: {{ .Values.time_zone }}
            - name: LE_ACCOUNT_KEY_NAME
              value: {{ .Values.lets_encrypt.account_key_secret_name }}
            - name: LE_PRIVATE_KEY_NAME
              value: {{ .Values.lets_encrypt.pivate_key_secret_name }}
            - name: LE_CSR_CONFIGMAP_NAME
              value: {{ .Values.lets_encrypt.csr_configmap_name }}
            - name: LE_TLS_SECRET_NAME
              value: {{ .Values.wordpress.ingress_tls_secret_name }}
            - name: INGRESS_URL
              value: {{ .Values.wordpress.ingress_url }}
            volumeMounts:
            - name: wordpress-volume
              mountPath: "/var/www/html"  # Same directory as what the WordPress pods are using. This is where the challenge files will be stored
          volumes:
          - name: wordpress-volume
            persistentVolumeClaim:
              claimName: wordpress-local-pvc  # workaround while using local provisioner instead of EFS
              # claimName: wordpress-pvc  # Referencing "[PersistentVolumeClaim].metadata.name" in deployment-wordpress.yaml
